//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class ContactsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ContactsScreen() : base("LightSwitchApplication.SuburbsSearch.DesktopClient:ContactsScreen")
        {
            global::LightSwitchApplication.ContactsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ContactsScreen CreateInstance()
        {
            return new global::LightSwitchApplication.ContactsScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Contacts_SelectionChanged();

        partial void Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Contact> Contacts
        {
            get
            {
                return global::LightSwitchApplication.ContactsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties.Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.ContactsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.ContactsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties.Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>.Entry
                __ContactsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeCreated,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeActivated,
                    global::LightSwitchApplication.ContactsScreen.DetailsClass.__ContactsScreen_InvokeSaveErrorEvent);
            private static void __ContactsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ContactsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ContactsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ContactsScreen_InvokeSavingEvent(global::LightSwitchApplication.ContactsScreen s)
            {
                bool handled = false;
                s.ContactsScreen_Saving(ref handled);
                return handled;
            }
            private static void __ContactsScreen_InvokeSavedEvent(global::LightSwitchApplication.ContactsScreen s)
            {
                s.ContactsScreen_Saved();
            }
            private static bool __ContactsScreen_InvokeClosingEvent(global::LightSwitchApplication.ContactsScreen s)
            {
                bool cancel = false;
                s.ContactsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __ContactsScreen_InvokeCreated(global::LightSwitchApplication.ContactsScreen s)
            {
                s.ContactsScreen_Created();
            }
            private static void __ContactsScreen_InvokeActivated(global::LightSwitchApplication.ContactsScreen s)
            {
                s.ContactsScreen_Activated();
            }
            private static bool __ContactsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.ContactsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.ContactsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ContactsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ContactsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ContactsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contacts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact> Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact>)base.GetItem(global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties.Contacts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contacts",
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_Stub,
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_Validate,
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_CreateQuery,
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_SelectionChanged,
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.ContactsScreen.DetailsClass.PropertySetProperties._Contacts_OnLoaded);
                private static void _Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ContactsScreen, global::LightSwitchApplication.ContactsScreen.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.ContactsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Contacts, sf);
                }
                private static void _Contacts_Validate(global::LightSwitchApplication.ContactsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Contacts_CreateQuery(global::LightSwitchApplication.ContactsScreen.DetailsClass d, object[] args)
                {
                    return d.ContactsQuery();
                }
                private static void _Contacts_SelectionChanged(global::LightSwitchApplication.ContactsScreen s)
                {
                    s.Contacts_SelectionChanged();
                }
                private static void _Contacts_OnCollectionChanged(global::LightSwitchApplication.ContactsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Contacts_Changed(e);
                }
                private static void _Contacts_OnLoaded(global::LightSwitchApplication.ContactsScreen s, bool succeeded)
                {
                    s.Contacts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class MatterScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private MatterScreen() : base("LightSwitchApplication.SuburbsSearch.DesktopClient:MatterScreen")
        {
            global::LightSwitchApplication.MatterScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static MatterScreen CreateInstance()
        {
            return new global::LightSwitchApplication.MatterScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatterScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Matters_SelectionChanged();

        partial void Matters_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Matters_Loaded(bool succeeded);

        partial void Suburb_SelectionChanged();

        partial void Suburb_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburb_Loaded(bool succeeded);

        partial void LocalityFilter_Changed();

        partial void Contacts_SelectionChanged();

        partial void Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Loaded(bool succeeded);

        partial void ContactNameFilter_Changed();

        /// <summary>
        /// Gets the Matters visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Matter> Matters
        {
            get
            {
                return global::LightSwitchApplication.MatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Matters);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Matters_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suburb visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Suburb> Suburb
        {
            get
            {
                return global::LightSwitchApplication.MatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Suburb);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburb_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LocalityFilter
        {
            get 
            {
                return global::LightSwitchApplication.MatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.LocalityFilter);
            }
            set
            {
                global::LightSwitchApplication.MatterScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.LocalityFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocalityFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Contact> Contacts
        {
            get
            {
                return global::LightSwitchApplication.MatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactNameFilter
        {
            get 
            {
                return global::LightSwitchApplication.MatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.ContactNameFilter);
            }
            set
            {
                global::LightSwitchApplication.MatterScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.ContactNameFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactNameFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the MatterListAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void MatterListAddAndEditNew()
        {
            this.Details.Methods.MatterListAddAndEditNew.CreateInvocation().Execute();
        }
        partial void MatterListAddAndEditNew_CanExecute(ref bool result);
        partial void MatterListAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySet, global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSet, global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Matters;
                var initializeCommandEntry = global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSetProperties.MatterListAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSetProperties.MatterListAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry
                __MatterScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeCreated,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeActivated,
                    global::LightSwitchApplication.MatterScreen.DetailsClass.__MatterScreen_InvokeSaveErrorEvent);
            private static void __MatterScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.MatterScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.MatterScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __MatterScreen_InvokeSavingEvent(global::LightSwitchApplication.MatterScreen s)
            {
                bool handled = false;
                s.MatterScreen_Saving(ref handled);
                return handled;
            }
            private static void __MatterScreen_InvokeSavedEvent(global::LightSwitchApplication.MatterScreen s)
            {
                s.MatterScreen_Saved();
            }
            private static bool __MatterScreen_InvokeClosingEvent(global::LightSwitchApplication.MatterScreen s)
            {
                bool cancel = false;
                s.MatterScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __MatterScreen_InvokeCreated(global::LightSwitchApplication.MatterScreen s)
            {
                s.MatterScreen_Created();
            }
            private static void __MatterScreen_InvokeActivated(global::LightSwitchApplication.MatterScreen s)
            {
                s.MatterScreen_Activated();
            }
            private static bool __MatterScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.MatterScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.MatterScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MattersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Matters,
                            "Suburb"),
                        "Contact"),
                    "Suburb.State");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuburbQuery(string Locality)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.SuburbByLocality(Locality),
                    "State");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ContactsQuery(string Name)
            {
                return this.Screen.DataWorkspace.ApplicationData.ContactByName(Name);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Data _Matters;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data _Suburb;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Data _LocalityFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contacts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Data _ContactNameFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Data _MatterListAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Data _MatterListAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter> Matters
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Matters);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb> Suburb
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Suburb);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string> LocalityFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.LocalityFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact> Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.Contacts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string> ContactNameFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties.ContactNameFilter);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass> MatterListAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSetProperties.MatterListAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass> MatterListAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSetProperties.MatterListAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Entry
                    Matters = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Entry(
                        "Matters",
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_Validate,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_CreateQuery,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_SelectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_OnCollectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Matters_OnLoaded);
                private static void _Matters_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Matters, sf);
                }
                private static void _Matters_Validate(global::LightSwitchApplication.MatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Matters_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Matters_CreateQuery(global::LightSwitchApplication.MatterScreen.DetailsClass d, object[] args)
                {
                    return d.MattersQuery();
                }
                private static void _Matters_SelectionChanged(global::LightSwitchApplication.MatterScreen s)
                {
                    s.Matters_SelectionChanged();
                }
                private static void _Matters_OnCollectionChanged(global::LightSwitchApplication.MatterScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Matters_Changed(e);
                }
                private static void _Matters_OnLoaded(global::LightSwitchApplication.MatterScreen s, bool succeeded)
                {
                    s.Matters_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry
                    Suburb = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry(
                        "Suburb",
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_Validate,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_CreateQuery,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_SelectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_OnCollectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Suburb_OnLoaded);
                private static void _Suburb_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Suburb, sf);
                }
                private static void _Suburb_Validate(global::LightSwitchApplication.MatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suburb_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suburb_CreateQuery(global::LightSwitchApplication.MatterScreen.DetailsClass d, object[] args)
                {
                    return d.SuburbQuery((string)args[0]);
                }
                private static void _Suburb_SelectionChanged(global::LightSwitchApplication.MatterScreen s)
                {
                    s.Suburb_SelectionChanged();
                }
                private static void _Suburb_OnCollectionChanged(global::LightSwitchApplication.MatterScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suburb_Changed(e);
                }
                private static void _Suburb_OnLoaded(global::LightSwitchApplication.MatterScreen s, bool succeeded)
                {
                    s.Suburb_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Entry
                    LocalityFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Entry(
                        "LocalityFilter",
                        false,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._LocalityFilter_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._LocalityFilter_Validate,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._LocalityFilter_OnValueChanged);
                private static void _LocalityFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._LocalityFilter, sf);
                }
                private static void _LocalityFilter_Validate(global::LightSwitchApplication.MatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.LocalityFilter_Validate(r);
                }
                private static void _LocalityFilter_OnValueChanged(global::LightSwitchApplication.MatterScreen s)
                {
                    s.LocalityFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contacts",
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_Validate,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_CreateQuery,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_SelectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._Contacts_OnLoaded);
                private static void _Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Contacts, sf);
                }
                private static void _Contacts_Validate(global::LightSwitchApplication.MatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Contacts_CreateQuery(global::LightSwitchApplication.MatterScreen.DetailsClass d, object[] args)
                {
                    return d.ContactsQuery((string)args[0]);
                }
                private static void _Contacts_SelectionChanged(global::LightSwitchApplication.MatterScreen s)
                {
                    s.Contacts_SelectionChanged();
                }
                private static void _Contacts_OnCollectionChanged(global::LightSwitchApplication.MatterScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Contacts_Changed(e);
                }
                private static void _Contacts_OnLoaded(global::LightSwitchApplication.MatterScreen s, bool succeeded)
                {
                    s.Contacts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Entry
                    ContactNameFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Entry(
                        "ContactNameFilter",
                        false,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._ContactNameFilter_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._ContactNameFilter_Validate,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.PropertySetProperties._ContactNameFilter_OnValueChanged);
                private static void _ContactNameFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass, string>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactNameFilter, sf);
                }
                private static void _ContactNameFilter_Validate(global::LightSwitchApplication.MatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ContactNameFilter_Validate(r);
                }
                private static void _ContactNameFilter_OnValueChanged(global::LightSwitchApplication.MatterScreen s)
                {
                    s.ContactNameFilter_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry
                    MatterListAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry(
                        "MatterListAddAndEditNew",
                        global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSetProperties._MatterListAddAndEditNew_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.CommandSetProperties._MatterListAddAndEditNew_CreateExecutableObject);
                private static void _MatterListAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._MatterListAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _MatterListAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.MatterScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.MatterScreen.DetailsClass)d).Methods.MatterListAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry
                    MatterListAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Entry(
                        "MatterListAddAndEditNew",
                        global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSetProperties._MatterListAddAndEditNew_Stub,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSetProperties._MatterListAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.MatterScreen.DetailsClass.MethodSetProperties._MatterListAddAndEditNew_InvokeMethod);
                private static void _MatterListAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MatterScreen, global::LightSwitchApplication.MatterScreen.DetailsClass>.Data> c, global::LightSwitchApplication.MatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._MatterListAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _MatterListAddAndEditNew_CanInvoke(global::LightSwitchApplication.MatterScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.MatterListAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _MatterListAddAndEditNew_InvokeMethod(global::LightSwitchApplication.MatterScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.MatterListAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class SuburbScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SuburbScreen() : base("LightSwitchApplication.SuburbsSearch.DesktopClient:SuburbScreen")
        {
            global::LightSwitchApplication.SuburbScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SuburbScreen CreateInstance()
        {
            return new global::LightSwitchApplication.SuburbScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Suburbs_SelectionChanged();

        partial void Suburbs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburbs_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Suburbs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Suburb> Suburbs
        {
            get
            {
                return global::LightSwitchApplication.SuburbScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties.Suburbs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburbs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySet, global::LightSwitchApplication.SuburbScreen.DetailsClass.CommandSet, global::LightSwitchApplication.SuburbScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties.Suburbs;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>.Entry
                __SuburbScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeCreated,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeActivated,
                    global::LightSwitchApplication.SuburbScreen.DetailsClass.__SuburbScreen_InvokeSaveErrorEvent);
            private static void __SuburbScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SuburbScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SuburbScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SuburbScreen_InvokeSavingEvent(global::LightSwitchApplication.SuburbScreen s)
            {
                bool handled = false;
                s.SuburbScreen_Saving(ref handled);
                return handled;
            }
            private static void __SuburbScreen_InvokeSavedEvent(global::LightSwitchApplication.SuburbScreen s)
            {
                s.SuburbScreen_Saved();
            }
            private static bool __SuburbScreen_InvokeClosingEvent(global::LightSwitchApplication.SuburbScreen s)
            {
                bool cancel = false;
                s.SuburbScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __SuburbScreen_InvokeCreated(global::LightSwitchApplication.SuburbScreen s)
            {
                s.SuburbScreen_Created();
            }
            private static void __SuburbScreen_InvokeActivated(global::LightSwitchApplication.SuburbScreen s)
            {
                s.SuburbScreen_Activated();
            }
            private static bool __SuburbScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.SuburbScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.SuburbScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SuburbScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SuburbScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuburbsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Suburbs,
                    "State");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data _Suburbs;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb> Suburbs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb>)base.GetItem(global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties.Suburbs);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry
                    Suburbs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry(
                        "Suburbs",
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_Stub,
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_Validate,
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_CreateQuery,
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_SelectionChanged,
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_OnCollectionChanged,
                        global::LightSwitchApplication.SuburbScreen.DetailsClass.PropertySetProperties._Suburbs_OnLoaded);
                private static void _Suburbs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuburbScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuburbScreen, global::LightSwitchApplication.SuburbScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data> c, global::LightSwitchApplication.SuburbScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Suburbs, sf);
                }
                private static void _Suburbs_Validate(global::LightSwitchApplication.SuburbScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suburbs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suburbs_CreateQuery(global::LightSwitchApplication.SuburbScreen.DetailsClass d, object[] args)
                {
                    return d.SuburbsQuery();
                }
                private static void _Suburbs_SelectionChanged(global::LightSwitchApplication.SuburbScreen s)
                {
                    s.Suburbs_SelectionChanged();
                }
                private static void _Suburbs_OnCollectionChanged(global::LightSwitchApplication.SuburbScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suburbs_Changed(e);
                }
                private static void _Suburbs_OnLoaded(global::LightSwitchApplication.SuburbScreen s, bool succeeded)
                {
                    s.Suburbs_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class SearchMatterScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SearchMatterScreen() : base("LightSwitchApplication.SuburbsSearch.DesktopClient:SearchMatterScreen")
        {
            global::LightSwitchApplication.SearchMatterScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SearchMatterScreen CreateInstance()
        {
            return new global::LightSwitchApplication.SearchMatterScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchMatterScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Matter_SelectionChanged();

        partial void Matter_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Matter_Loaded(bool succeeded);

        partial void StateSearch_Changed();

        partial void Suburbs_SelectionChanged();

        partial void Suburbs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburbs_Loaded(bool succeeded);

        partial void SuburbSearch_Changed();

        /// <summary>
        /// Gets the Matter visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Matter> Matter
        {
            get
            {
                return global::LightSwitchApplication.SearchMatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.Matter);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Matter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.State StateSearch
        {
            get 
            {
                return global::LightSwitchApplication.SearchMatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.StateSearch);
            }
            set
            {
                global::LightSwitchApplication.SearchMatterScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.StateSearch, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateSearch_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suburbs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Suburb> Suburbs
        {
            get
            {
                return global::LightSwitchApplication.SearchMatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.Suburbs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suburbs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Suburb SuburbSearch
        {
            get 
            {
                return global::LightSwitchApplication.SearchMatterScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.SuburbSearch);
            }
            set
            {
                global::LightSwitchApplication.SearchMatterScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.SuburbSearch, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuburbSearch_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySet, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.CommandSet, global::LightSwitchApplication.SearchMatterScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.Matter;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>.Entry
                __SearchMatterScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeCreated,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeActivated,
                    global::LightSwitchApplication.SearchMatterScreen.DetailsClass.__SearchMatterScreen_InvokeSaveErrorEvent);
            private static void __SearchMatterScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SearchMatterScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SearchMatterScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SearchMatterScreen_InvokeSavingEvent(global::LightSwitchApplication.SearchMatterScreen s)
            {
                bool handled = false;
                s.SearchMatterScreen_Saving(ref handled);
                return handled;
            }
            private static void __SearchMatterScreen_InvokeSavedEvent(global::LightSwitchApplication.SearchMatterScreen s)
            {
                s.SearchMatterScreen_Saved();
            }
            private static bool __SearchMatterScreen_InvokeClosingEvent(global::LightSwitchApplication.SearchMatterScreen s)
            {
                bool cancel = false;
                s.SearchMatterScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __SearchMatterScreen_InvokeCreated(global::LightSwitchApplication.SearchMatterScreen s)
            {
                s.SearchMatterScreen_Created();
            }
            private static void __SearchMatterScreen_InvokeActivated(global::LightSwitchApplication.SearchMatterScreen s)
            {
                s.SearchMatterScreen_Activated();
            }
            private static bool __SearchMatterScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.SearchMatterScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.SearchMatterScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SearchMatterScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SearchMatterScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MatterQuery(string SuburbLocality)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ApplicationData.MatterBySuburb(SuburbLocality),
                        "Suburb"),
                    "Contact");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuburbsQuery()
            {
                if (this.Screen.StateSearch == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Suburb> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Suburb>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.StateSearch.Details.Properties.Suburbs).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Data _Matter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State>.Data _StateSearch;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data _Suburbs;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data _SuburbSearch;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter> Matter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter>)base.GetItem(global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.Matter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State> StateSearch
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State>)base.GetItem(global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.StateSearch);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb> Suburbs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>)base.GetItem(global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.Suburbs);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb> SuburbSearch
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>)base.GetItem(global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties.SuburbSearch);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Entry
                    Matter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Entry(
                        "Matter",
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_Stub,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_Validate,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_CreateQuery,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_SelectionChanged,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_OnCollectionChanged,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Matter_OnLoaded);
                private static void _Matter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Matter>.Data> c, global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Matter, sf);
                }
                private static void _Matter_Validate(global::LightSwitchApplication.SearchMatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Matter_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Matter_CreateQuery(global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object[] args)
                {
                    return d.MatterQuery((string)args[0]);
                }
                private static void _Matter_SelectionChanged(global::LightSwitchApplication.SearchMatterScreen s)
                {
                    s.Matter_SelectionChanged();
                }
                private static void _Matter_OnCollectionChanged(global::LightSwitchApplication.SearchMatterScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Matter_Changed(e);
                }
                private static void _Matter_OnLoaded(global::LightSwitchApplication.SearchMatterScreen s, bool succeeded)
                {
                    s.Matter_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State>.Entry
                    StateSearch = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State>.Entry(
                        "StateSearch",
                        false,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._StateSearch_Stub,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._StateSearch_Validate,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._StateSearch_OnValueChanged);
                private static void _StateSearch_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.State>.Data> c, global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._StateSearch, sf);
                }
                private static void _StateSearch_Validate(global::LightSwitchApplication.SearchMatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StateSearch_Validate(r);
                }
                private static void _StateSearch_OnValueChanged(global::LightSwitchApplication.SearchMatterScreen s)
                {
                    s.StateSearch_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry
                    Suburbs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry(
                        "Suburbs",
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_Stub,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_Validate,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_CreateQuery,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_SelectionChanged,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_OnCollectionChanged,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._Suburbs_OnLoaded);
                private static void _Suburbs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data> c, global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Suburbs, sf);
                }
                private static void _Suburbs_Validate(global::LightSwitchApplication.SearchMatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suburbs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suburbs_CreateQuery(global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object[] args)
                {
                    return d.SuburbsQuery();
                }
                private static void _Suburbs_SelectionChanged(global::LightSwitchApplication.SearchMatterScreen s)
                {
                    s.Suburbs_SelectionChanged();
                }
                private static void _Suburbs_OnCollectionChanged(global::LightSwitchApplication.SearchMatterScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suburbs_Changed(e);
                }
                private static void _Suburbs_OnLoaded(global::LightSwitchApplication.SearchMatterScreen s, bool succeeded)
                {
                    s.Suburbs_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry
                    SuburbSearch = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Entry(
                        "SuburbSearch",
                        false,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._SuburbSearch_Stub,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._SuburbSearch_Validate,
                        global::LightSwitchApplication.SearchMatterScreen.DetailsClass.PropertySetProperties._SuburbSearch_OnValueChanged);
                private static void _SuburbSearch_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SearchMatterScreen, global::LightSwitchApplication.SearchMatterScreen.DetailsClass, global::LightSwitchApplication.Suburb>.Data> c, global::LightSwitchApplication.SearchMatterScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._SuburbSearch, sf);
                }
                private static void _SuburbSearch_Validate(global::LightSwitchApplication.SearchMatterScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SuburbSearch_Validate(r);
                }
                private static void _SuburbSearch_OnValueChanged(global::LightSwitchApplication.SearchMatterScreen s)
                {
                    s.SuburbSearch_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EditableStatesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableStatesGrid() : base("LightSwitchApplication.SuburbsSearch.DesktopClient:EditableStatesGrid")
        {
            global::LightSwitchApplication.EditableStatesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableStatesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableStatesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableStatesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void States_SelectionChanged();

        partial void States_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void States_Loaded(bool succeeded);

        /// <summary>
        /// Gets the States visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.State> States
        {
            get
            {
                return global::LightSwitchApplication.EditableStatesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties.States);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void States_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableStatesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableStatesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties.States;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>.Entry
                __EditableStatesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableStatesGrid.DetailsClass.__EditableStatesGrid_InvokeSaveErrorEvent);
            private static void __EditableStatesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableStatesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableStatesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableStatesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableStatesGrid s)
            {
                bool handled = false;
                s.EditableStatesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableStatesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableStatesGrid s)
            {
                s.EditableStatesGrid_Saved();
            }
            private static bool __EditableStatesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableStatesGrid s)
            {
                bool cancel = false;
                s.EditableStatesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableStatesGrid_InvokeCreated(global::LightSwitchApplication.EditableStatesGrid s)
            {
                s.EditableStatesGrid_Created();
            }
            private static void __EditableStatesGrid_InvokeActivated(global::LightSwitchApplication.EditableStatesGrid s)
            {
                s.EditableStatesGrid_Activated();
            }
            private static bool __EditableStatesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableStatesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableStatesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableStatesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableStatesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StatesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.States;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State>.Data _States;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State> States
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State>)base.GetItem(global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties.States);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State>.Entry
                    States = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State>.Entry(
                        "States",
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_Stub,
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_Validate,
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_CreateQuery,
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_SelectionChanged,
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_OnCollectionChanged,
                        global::LightSwitchApplication.EditableStatesGrid.DetailsClass.PropertySetProperties._States_OnLoaded);
                private static void _States_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableStatesGrid, global::LightSwitchApplication.EditableStatesGrid.DetailsClass, global::LightSwitchApplication.State>.Data> c, global::LightSwitchApplication.EditableStatesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._States, sf);
                }
                private static void _States_Validate(global::LightSwitchApplication.EditableStatesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.States_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _States_CreateQuery(global::LightSwitchApplication.EditableStatesGrid.DetailsClass d, object[] args)
                {
                    return d.StatesQuery();
                }
                private static void _States_SelectionChanged(global::LightSwitchApplication.EditableStatesGrid s)
                {
                    s.States_SelectionChanged();
                }
                private static void _States_OnCollectionChanged(global::LightSwitchApplication.EditableStatesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.States_Changed(e);
                }
                private static void _States_OnLoaded(global::LightSwitchApplication.EditableStatesGrid s, bool succeeded)
                {
                    s.States_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
